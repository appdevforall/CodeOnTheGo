// Generated by view binder compiler. Do not edit!
package org.appdevforall.layouteditor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.jsibbold.zoomage.ZoomageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.appdevforall.layouteditor.R;

public final class ActivityPreviewDrawableBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView background;

  @NonNull
  public final ZoomageView mainImage;

  @NonNull
  public final LinearLayout root;

  @NonNull
  public final MaterialToolbar topAppBar;

  private ActivityPreviewDrawableBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView background, @NonNull ZoomageView mainImage, @NonNull LinearLayout root,
      @NonNull MaterialToolbar topAppBar) {
    this.rootView = rootView;
    this.background = background;
    this.mainImage = mainImage;
    this.root = root;
    this.topAppBar = topAppBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPreviewDrawableBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPreviewDrawableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_preview_drawable, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPreviewDrawableBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.background;
      ImageView background = ViewBindings.findChildViewById(rootView, id);
      if (background == null) {
        break missingId;
      }

      id = R.id.main_image;
      ZoomageView mainImage = ViewBindings.findChildViewById(rootView, id);
      if (mainImage == null) {
        break missingId;
      }

      LinearLayout root = (LinearLayout) rootView;

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      return new ActivityPreviewDrawableBinding((LinearLayout) rootView, background, mainImage,
          root, topAppBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
