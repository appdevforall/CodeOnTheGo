// Generated by view binder compiler. Do not edit!
package org.appdevforall.layouteditor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.appdevforall.layouteditor.R;

public final class ShowAttributeItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView attributeName;

  @NonNull
  public final TextView attributeValue;

  @NonNull
  public final ImageView btnRemoveAttribute;

  private ShowAttributeItemBinding(@NonNull CardView rootView, @NonNull TextView attributeName,
      @NonNull TextView attributeValue, @NonNull ImageView btnRemoveAttribute) {
    this.rootView = rootView;
    this.attributeName = attributeName;
    this.attributeValue = attributeValue;
    this.btnRemoveAttribute = btnRemoveAttribute;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ShowAttributeItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ShowAttributeItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.show_attribute_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ShowAttributeItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attribute_name;
      TextView attributeName = ViewBindings.findChildViewById(rootView, id);
      if (attributeName == null) {
        break missingId;
      }

      id = R.id.attribute_value;
      TextView attributeValue = ViewBindings.findChildViewById(rootView, id);
      if (attributeValue == null) {
        break missingId;
      }

      id = R.id.btn_remove_attribute;
      ImageView btnRemoveAttribute = ViewBindings.findChildViewById(rootView, id);
      if (btnRemoveAttribute == null) {
        break missingId;
      }

      return new ShowAttributeItemBinding((CardView) rootView, attributeName, attributeValue,
          btnRemoveAttribute);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
