// Generated by view binder compiler. Do not edit!
package org.appdevforall.layouteditor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.appdevforall.layouteditor.R;

public final class LayoutValuesItemDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputLayout textInputLayoutName;

  @NonNull
  public final TextInputLayout textInputLayoutValue;

  @NonNull
  public final TextInputEditText textinputName;

  @NonNull
  public final TextInputEditText textinputValue;

  private LayoutValuesItemDialogBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputLayout textInputLayoutName, @NonNull TextInputLayout textInputLayoutValue,
      @NonNull TextInputEditText textinputName, @NonNull TextInputEditText textinputValue) {
    this.rootView = rootView;
    this.textInputLayoutName = textInputLayoutName;
    this.textInputLayoutValue = textInputLayoutValue;
    this.textinputName = textinputName;
    this.textinputValue = textinputValue;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutValuesItemDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutValuesItemDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_values_item_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutValuesItemDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.text_input_layout_name;
      TextInputLayout textInputLayoutName = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutName == null) {
        break missingId;
      }

      id = R.id.text_input_layout_value;
      TextInputLayout textInputLayoutValue = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutValue == null) {
        break missingId;
      }

      id = R.id.textinput_name;
      TextInputEditText textinputName = ViewBindings.findChildViewById(rootView, id);
      if (textinputName == null) {
        break missingId;
      }

      id = R.id.textinput_value;
      TextInputEditText textinputValue = ViewBindings.findChildViewById(rootView, id);
      if (textinputValue == null) {
        break missingId;
      }

      return new LayoutValuesItemDialogBinding((LinearLayout) rootView, textInputLayoutName,
          textInputLayoutValue, textinputName, textinputValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
