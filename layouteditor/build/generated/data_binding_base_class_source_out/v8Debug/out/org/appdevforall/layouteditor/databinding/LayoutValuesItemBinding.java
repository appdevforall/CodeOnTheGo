// Generated by view binder compiler. Do not edit!
package org.appdevforall.layouteditor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.appdevforall.layouteditor.R;

public final class LayoutValuesItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout line;

  @NonNull
  public final ImageView menu;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView value;

  @NonNull
  public final TextView versions;

  private LayoutValuesItemBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout line,
      @NonNull ImageView menu, @NonNull TextView name, @NonNull TextView value,
      @NonNull TextView versions) {
    this.rootView = rootView;
    this.line = line;
    this.menu = menu;
    this.name = name;
    this.value = value;
    this.versions = versions;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutValuesItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutValuesItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_values_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutValuesItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.line;
      LinearLayout line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      id = R.id.menu;
      ImageView menu = ViewBindings.findChildViewById(rootView, id);
      if (menu == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.value;
      TextView value = ViewBindings.findChildViewById(rootView, id);
      if (value == null) {
        break missingId;
      }

      id = R.id.versions;
      TextView versions = ViewBindings.findChildViewById(rootView, id);
      if (versions == null) {
        break missingId;
      }

      return new LayoutValuesItemBinding((RelativeLayout) rootView, line, menu, name, value,
          versions);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
