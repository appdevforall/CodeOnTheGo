// Generated by view binder compiler. Do not edit!
package org.appdevforall.layouteditor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.divider.MaterialDivider;
import com.google.android.material.navigationrail.NavigationRailView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.appdevforall.layouteditor.R;
import org.appdevforall.layouteditor.editor.DesignEditor;
import org.appdevforall.layouteditor.views.CustomDrawerLayout;
import org.appdevforall.layouteditor.views.StructureView;

public final class ActivityEditorBinding implements ViewBinding {
  @NonNull
  private final CustomDrawerLayout rootView;

  @NonNull
  public final LinearLayoutCompat content;

  @NonNull
  public final ImageView deviceSize;

  @NonNull
  public final MaterialDivider divider;

  @NonNull
  public final CustomDrawerLayout drawer;

  @NonNull
  public final DesignEditor editorLayout;

  @NonNull
  public final RecyclerView listView;

  @NonNull
  public final NavigationRailView paletteNavigation;

  @NonNull
  public final TextView paletteText;

  @NonNull
  public final StructureView structureView;

  @NonNull
  public final TextView title;

  @NonNull
  public final MaterialToolbar topAppBar;

  @NonNull
  public final ImageView viewType;

  private ActivityEditorBinding(@NonNull CustomDrawerLayout rootView,
      @NonNull LinearLayoutCompat content, @NonNull ImageView deviceSize,
      @NonNull MaterialDivider divider, @NonNull CustomDrawerLayout drawer,
      @NonNull DesignEditor editorLayout, @NonNull RecyclerView listView,
      @NonNull NavigationRailView paletteNavigation, @NonNull TextView paletteText,
      @NonNull StructureView structureView, @NonNull TextView title,
      @NonNull MaterialToolbar topAppBar, @NonNull ImageView viewType) {
    this.rootView = rootView;
    this.content = content;
    this.deviceSize = deviceSize;
    this.divider = divider;
    this.drawer = drawer;
    this.editorLayout = editorLayout;
    this.listView = listView;
    this.paletteNavigation = paletteNavigation;
    this.paletteText = paletteText;
    this.structureView = structureView;
    this.title = title;
    this.topAppBar = topAppBar;
    this.viewType = viewType;
  }

  @Override
  @NonNull
  public CustomDrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_editor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.content;
      LinearLayoutCompat content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.device_size;
      ImageView deviceSize = ViewBindings.findChildViewById(rootView, id);
      if (deviceSize == null) {
        break missingId;
      }

      id = R.id.divider;
      MaterialDivider divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      CustomDrawerLayout drawer = (CustomDrawerLayout) rootView;

      id = R.id.editor_layout;
      DesignEditor editorLayout = ViewBindings.findChildViewById(rootView, id);
      if (editorLayout == null) {
        break missingId;
      }

      id = R.id.list_view;
      RecyclerView listView = ViewBindings.findChildViewById(rootView, id);
      if (listView == null) {
        break missingId;
      }

      id = R.id.palette_navigation;
      NavigationRailView paletteNavigation = ViewBindings.findChildViewById(rootView, id);
      if (paletteNavigation == null) {
        break missingId;
      }

      id = R.id.palette_text;
      TextView paletteText = ViewBindings.findChildViewById(rootView, id);
      if (paletteText == null) {
        break missingId;
      }

      id = R.id.structure_view;
      StructureView structureView = ViewBindings.findChildViewById(rootView, id);
      if (structureView == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      id = R.id.view_type;
      ImageView viewType = ViewBindings.findChildViewById(rootView, id);
      if (viewType == null) {
        break missingId;
      }

      return new ActivityEditorBinding((CustomDrawerLayout) rootView, content, deviceSize, divider,
          drawer, editorLayout, listView, paletteNavigation, paletteText, structureView, title,
          topAppBar, viewType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
