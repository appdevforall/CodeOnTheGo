{
  "lockfile-version": 1,
  "manifest": {
    "version": 1,
    "install": {
      "android-studio-tools": {
        "pkg-path": "android-studio-tools"
      },
      "jdk17": {
        "pkg-path": "jdk17"
      },
      "ktlint": {
        "pkg-path": "ktlint"
      }
    },
    "hook": {
      "on-activate": "  set -eu\n  set -o pipefail\n\n  if ! [ -f \".androidide_root\" ]; then\n    echo \"Run `flox activate` from the root directory\"\n    echo \"Abort.\"\n    exit 1\n  fi\n\n  # Use these env vars if set; otherwise fall back to default\n  DEFAULT_ANDROID_HOME=\"$HOME/Android/Sdk\"\n  DEFAULT_GRADLE_USER_HOME=\"$HOME/.gradle\"\n  ANDROID_HOME=\"${ANDROID_HOME:-$DEFAULT_ANDROID_HOME}\"\n  GRADLE_USER_HOME=\"${GRADLE_USER_HOME:-$DEFAULT_GRADLE_USER_HOME}\"\n  export ANDROID_HOME\n  export GRADLE_USER_HOME\n\n  echo \"Using ANDROID_HOME=$ANDROID_HOME\"\n  echo \"Using GRADLE_USER_HOME=$GRADLE_USER_HOME\"\n\n  # Accept licenses\n  echo \"Accepting SDK licenses...\"\n  { yes || true; } | sdkmanager --sdk_root=\"$ANDROID_HOME\" --licenses 2>&1 > /dev/null\n\n  install_sdk_tools_if_required() {\n    installed_tools=$(sdkmanager --sdk_root=\"$ANDROID_HOME\" --list_installed)\n\n    declare -a to_install=()\n    for package in \"$@\"; do\n        if ! echo \"$installed_tools\" | grep -q \"$package\"; then\n            echo \"'$package' is missing.\"\n            to_install+=(\"$package\")\n        fi\n    done\n\n    if [ ${#to_install[@]} -ne 0 ]; then\n        echo \"Installing SDK Tools: ${to_install[*]}\"\n        sdkmanager --sdk_root=\"$ANDROID_HOME\" --install \"${to_install[@]}\"\n    fi\n  }\n\n  # The packages we need\n  install_sdk_tools_if_required \\\n    \"build-tools;35.0.0\" \\\n    \"cmake;3.31.6\" \\\n    \"platforms;android-35\" \\\n    \"platform-tools\" \\\n    \"ndk;26.1.10909125\"\n\n  # Set up local.properties file\n  if ! [ -f \"local.properties\" ]; then\n    echo \"Creating local.properties file...\"\n    echo \"sdk.dir=$ANDROID_HOME\" > local.properties\n  else\n    local_props=$(cat \"local.properties\")\n    if ! echo \"$local_props\" | grep -q \"^sdk.dir=\"; then\n      echo \"Updating local.properties to add sdk.dir=$ANDROID_HOME...\"\n      echo \"sdk.dir=$ANDROID_HOME\" >> local.properties\n    else\n      echo \"Updating local.properties to use sdk.dir=$ANDROID_HOME...\"\n      sed -i'' -e \"s|sdk.dir=.*|sdk.dir=$ANDROID_HOME|g\" local.properties\n    fi\n  fi\n\n  # Set git-hooks, if required\n  hook=\".git/hooks/pre-commit\"\n  if ! [ -f \"$hook\" ] || ! cat \"$hook\" | grep -q 'COGO_PRE_COMMIT_HOOK'; then\n    echo \"Updating pre-commit hook...\"\n    cat .githooks/pre-commit >> \"$hook\"\n    echo \"# -- COGO_PRE_COMMIT_HOOK\" >> \"$hook\"\n    chmod +x \"$hook\"\n  fi\n"
    },
    "profile": {
      "common": "  # Override the 'sdkmanager' command so that we don't have to\n  #   specify --sdk_root everytime\n  sdkman=$(command -v sdkmanager)\n  alias sdkmanager=\"$sdkman --sdk_root=$ANDROID_HOME\"\n"
    },
    "options": {
      "systems": [
        "aarch64-darwin",
        "aarch64-linux",
        "x86_64-darwin",
        "x86_64-linux"
      ]
    }
  },
  "packages": [
    {
      "attr_path": "android-studio-tools",
      "broken": false,
      "derivation": "/nix/store/z9s7k7hc89qw6mcgv7gddp7hffcv1jd2-android-studio-tools-13114758.drv",
      "description": "Android Studio CLI Tools",
      "install_id": "android-studio-tools",
      "license": "Unfree",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "android-studio-tools-13114758",
      "pname": "android-studio-tools",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T04:22:53.881398Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": true,
      "version": "13114758",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/rbmxi7d5a1k7v5xilqrj51v3a8y08adp-android-studio-tools-13114758"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "android-studio-tools",
      "broken": false,
      "derivation": "/nix/store/9f4jkmqb3vgd4ivf0276vcwbkaarga2g-android-studio-tools-13114758.drv",
      "description": "Android Studio CLI Tools",
      "install_id": "android-studio-tools",
      "license": "Unfree",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "android-studio-tools-13114758",
      "pname": "android-studio-tools",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T04:41:00.976394Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": true,
      "version": "13114758",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/mjrydz60ix524lvcdnvxcczalbnsm5fm-android-studio-tools-13114758"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "android-studio-tools",
      "broken": false,
      "derivation": "/nix/store/qwb12grf9ic1vbkr4bjsp96g3a1xnrl2-android-studio-tools-13114758.drv",
      "description": "Android Studio CLI Tools",
      "install_id": "android-studio-tools",
      "license": "Unfree",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "android-studio-tools-13114758",
      "pname": "android-studio-tools",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T04:56:58.697593Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": true,
      "version": "13114758",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/gcwbg7k2saa8k1sc0p0jcg19xrs5aagw-android-studio-tools-13114758"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "android-studio-tools",
      "broken": false,
      "derivation": "/nix/store/4ik9d1msnqpbprx4v1whvw5a30fwnrg8-android-studio-tools-13114758.drv",
      "description": "Android Studio CLI Tools",
      "install_id": "android-studio-tools",
      "license": "Unfree",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "android-studio-tools-13114758",
      "pname": "android-studio-tools",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T05:15:55.390466Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": true,
      "version": "13114758",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/jaaxg7lkp2d9md87qwgfbjw1fh97cyz9-android-studio-tools-13114758"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jdk17",
      "broken": false,
      "derivation": "/nix/store/g9c6ymdb9zwxnyqhjggh3czhm4bx03dp-zulu-ca-jdk-17.0.12.drv",
      "description": "Certified builds of OpenJDK",
      "install_id": "jdk17",
      "license": "GPL-2.0-only",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "zulu-ca-jdk-17.0.12",
      "pname": "jdk17",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T04:22:55.683189Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "17.0.12",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/3clfkf49kf9j00xr75zsag78h72zcwxd-zulu-ca-jdk-17.0.12"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jdk17",
      "broken": false,
      "derivation": "/nix/store/nf5p408gkmzzgzjcvkpspw96xyqx989v-openjdk-17.0.14+7.drv",
      "description": "Open-source Java Development Kit",
      "install_id": "jdk17",
      "license": "GPL-2.0-only",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "openjdk-17.0.14+7",
      "pname": "jdk17",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T04:41:04.041996Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "17.0.14+7",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/2fnirdq86nrvrlzcb6fxi2divj55pgq1-openjdk-17.0.14+7-debug",
        "out": "/nix/store/zhys88jj19v027apz0m6hs0fhx80cwbs-openjdk-17.0.14+7"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jdk17",
      "broken": false,
      "derivation": "/nix/store/7cdiv349gh4vmyj31a8x2qbqfzrmdg6n-zulu-ca-jdk-17.0.12.drv",
      "description": "Certified builds of OpenJDK",
      "install_id": "jdk17",
      "license": "GPL-2.0-only",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "zulu-ca-jdk-17.0.12",
      "pname": "jdk17",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T04:57:00.146185Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "17.0.12",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/2f69k186mp68n01572qf1yhbjbhys6g0-zulu-ca-jdk-17.0.12"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jdk17",
      "broken": false,
      "derivation": "/nix/store/rzipknjacaacmshmckj51pilc7f7nsqq-openjdk-17.0.14+7.drv",
      "description": "Open-source Java Development Kit",
      "install_id": "jdk17",
      "license": "GPL-2.0-only",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "openjdk-17.0.14+7",
      "pname": "jdk17",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T05:15:58.687401Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "17.0.14+7",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/7zi5xnq5f98zfkwcc0qr872gsk94x2fj-openjdk-17.0.14+7-debug",
        "out": "/nix/store/063dnz6gcvjwa0caiv637adqci11gap8-openjdk-17.0.14+7"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "ktlint",
      "broken": false,
      "derivation": "/nix/store/l4yrdp5ay5mxphca3axzp37ykan4225g-ktlint-1.5.0.drv",
      "description": "Anti-bikeshedding Kotlin linter with built-in formatter",
      "install_id": "ktlint",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "ktlint-1.5.0",
      "pname": "ktlint",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T04:22:55.882612Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "1.5.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/4zwf9cdjprwf3c00zvgbpm2gpilcmbkb-ktlint-1.5.0"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "ktlint",
      "broken": false,
      "derivation": "/nix/store/yiv4nqv1ny2dl8rzsjgwify8bm0k85ji-ktlint-1.5.0.drv",
      "description": "Anti-bikeshedding Kotlin linter with built-in formatter",
      "install_id": "ktlint",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "ktlint-1.5.0",
      "pname": "ktlint",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T04:41:04.666271Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "1.5.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/c4dm33d8arkm6lkn79rkx978v49ci404-ktlint-1.5.0"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "ktlint",
      "broken": false,
      "derivation": "/nix/store/66w8a2r6aylls2825vrgfzr9fzkdp396-ktlint-1.5.0.drv",
      "description": "Anti-bikeshedding Kotlin linter with built-in formatter",
      "install_id": "ktlint",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "ktlint-1.5.0",
      "pname": "ktlint",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T04:57:00.357625Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "1.5.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/92zn9f2abl03a8x0jgpnndar8590avyw-ktlint-1.5.0"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "ktlint",
      "broken": false,
      "derivation": "/nix/store/kc309mdhcxzlygr37skfx94rb40l24y6-ktlint-1.5.0.drv",
      "description": "Anti-bikeshedding Kotlin linter with built-in formatter",
      "install_id": "ktlint",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "name": "ktlint-1.5.0",
      "pname": "ktlint",
      "rev": "96ec055edbe5ee227f28cdbc3f1ddf1df5965102",
      "rev_count": 807377,
      "rev_date": "2025-05-28T19:24:49Z",
      "scrape_date": "2025-05-31T05:15:59.336373Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "1.5.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/mfxd71wmry878391qkfyyg8i60r8q4si-ktlint-1.5.0"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    }
  ],
  "compose": {
    "composer": {
      "version": 1,
      "install": {
        "ktlint": {
          "pkg-path": "ktlint"
        }
      },
      "hook": {
        "on-activate": "  # Set up local.properties file\n  if ! [ -f \"local.properties\" ]; then\n    echo \"Creating local.properties file...\"\n    echo \"sdk.dir=$ANDROID_HOME\" > local.properties\n  else\n    local_props=$(cat \"local.properties\")\n    if ! echo \"$local_props\" | grep -q \"^sdk.dir=\"; then\n      echo \"Updating local.properties to add sdk.dir=$ANDROID_HOME...\"\n      echo \"sdk.dir=$ANDROID_HOME\" >> local.properties\n    else\n      echo \"Updating local.properties to use sdk.dir=$ANDROID_HOME...\"\n      sed -i'' -e \"s|sdk.dir=.*|sdk.dir=$ANDROID_HOME|g\" local.properties\n    fi\n  fi\n\n  # Set git-hooks, if required\n  hook=\".git/hooks/pre-commit\"\n  if ! [ -f \"$hook\" ] || ! cat \"$hook\" | grep -q 'COGO_PRE_COMMIT_HOOK'; then\n    echo \"Updating pre-commit hook...\"\n    cat .githooks/pre-commit >> \"$hook\"\n    echo \"# -- COGO_PRE_COMMIT_HOOK\" >> \"$hook\"\n    chmod +x \"$hook\"\n  fi\n"
      },
      "profile": {},
      "options": {
        "systems": [
          "aarch64-darwin",
          "aarch64-linux",
          "x86_64-darwin",
          "x86_64-linux"
        ]
      },
      "include": {
        "environments": [
          {
            "dir": "../base"
          }
        ]
      }
    },
    "include": [
      {
        "manifest": {
          "version": 1,
          "install": {
            "android-studio-tools": {
              "pkg-path": "android-studio-tools"
            },
            "jdk17": {
              "pkg-path": "jdk17"
            }
          },
          "hook": {
            "on-activate": "  set -eu\n  set -o pipefail\n\n  if ! [ -f \".androidide_root\" ]; then\n    echo \"Run `flox activate` from the root directory\"\n    echo \"Abort.\"\n    exit 1\n  fi\n\n  # Use these env vars if set; otherwise fall back to default\n  DEFAULT_ANDROID_HOME=\"$HOME/Android/Sdk\"\n  DEFAULT_GRADLE_USER_HOME=\"$HOME/.gradle\"\n  ANDROID_HOME=\"${ANDROID_HOME:-$DEFAULT_ANDROID_HOME}\"\n  GRADLE_USER_HOME=\"${GRADLE_USER_HOME:-$DEFAULT_GRADLE_USER_HOME}\"\n  export ANDROID_HOME\n  export GRADLE_USER_HOME\n\n  echo \"Using ANDROID_HOME=$ANDROID_HOME\"\n  echo \"Using GRADLE_USER_HOME=$GRADLE_USER_HOME\"\n\n  # Accept licenses\n  echo \"Accepting SDK licenses...\"\n  { yes || true; } | sdkmanager --sdk_root=\"$ANDROID_HOME\" --licenses 2>&1 > /dev/null\n\n  install_sdk_tools_if_required() {\n    installed_tools=$(sdkmanager --sdk_root=\"$ANDROID_HOME\" --list_installed)\n\n    declare -a to_install=()\n    for package in \"$@\"; do\n        if ! echo \"$installed_tools\" | grep -q \"$package\"; then\n            echo \"'$package' is missing.\"\n            to_install+=(\"$package\")\n        fi\n    done\n\n    if [ ${#to_install[@]} -ne 0 ]; then\n        echo \"Installing SDK Tools: ${to_install[*]}\"\n        sdkmanager --sdk_root=\"$ANDROID_HOME\" --install \"${to_install[@]}\"\n    fi\n  }\n\n  # The packages we need\n  install_sdk_tools_if_required \\\n    \"build-tools;35.0.0\" \\\n    \"cmake;3.31.6\" \\\n    \"platforms;android-35\" \\\n    \"platform-tools\" \\\n    \"ndk;26.1.10909125\"\n"
          },
          "profile": {
            "common": "  # Override the 'sdkmanager' command so that we don't have to\n  #   specify --sdk_root everytime\n  sdkman=$(command -v sdkmanager)\n  alias sdkmanager=\"$sdkman --sdk_root=$ANDROID_HOME\"\n"
          },
          "options": {
            "systems": [
              "aarch64-darwin",
              "aarch64-linux",
              "x86_64-darwin",
              "x86_64-linux"
            ]
          }
        },
        "name": "base",
        "descriptor": {
          "dir": "../base"
        }
      }
    ],
    "warnings": [
      {
        "warning": {
          "Overriding": [
            "options",
            "systems"
          ]
        },
        "higher_priority_name": "Current manifest"
      }
    ]
  }
}