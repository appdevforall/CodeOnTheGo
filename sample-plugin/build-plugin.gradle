// Custom build script to create Android-compatible plugin JAR with DEX files

apply plugin: 'java'

task createPluginJar {
    dependsOn 'assembleRelease'
    
    doLast {
        // Get the compiled APK/AAR
        def aarFile = file('build/outputs/aar/sample-plugin-v7-release.aar')
        def tempDir = file('build/plugin-temp')
        def jarFile = file('build/outputs/hello-world-plugin.jar')
        
        if (!aarFile.exists()) {
            throw new GradleException("AAR file not found: ${aarFile}")
        }
        
        // Clean temp directory
        tempDir.deleteDir()
        tempDir.mkdirs()
        
        // Extract AAR
        copy {
            from zipTree(aarFile)
            into tempDir
        }
        
        // Convert classes.jar to DEX using d8
        def classesJar = file("${tempDir}/classes.jar")
        if (classesJar.exists()) {
            def d8Command = "${android.sdkDirectory}/build-tools/${android.buildToolsVersion}/d8"
            
            exec {
                commandLine d8Command, 
                    '--output', "${tempDir}/dex",
                    '--min-api', android.defaultConfig.minSdkVersion.apiLevel,
                    classesJar.absolutePath
            }
            
            // Move classes.dex to temp directory
            copy {
                from "${tempDir}/dex"
                into tempDir
                include "classes.dex"
            }
            
            // Remove intermediate files
            file("${tempDir}/dex").deleteDir()
            classesJar.delete()
        }
        
        // Copy plugin.json
        copy {
            from 'src/main/resources/plugin.json'
            into tempDir
        }
        
        // Clean up unwanted files
        file("${tempDir}/AndroidManifest.xml").delete()
        file("${tempDir}/R.txt").delete()
        file("${tempDir}/proguard.txt").delete()
        
        // Create final JAR
        ant.jar(destfile: jarFile, basedir: tempDir)
        
        println "Generated Android plugin JAR: ${jarFile.absolutePath}"
    }
}