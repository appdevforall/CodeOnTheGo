name: Instrumented Tests

on:
  push:
    branches: [ "stage", "feature/**" ]
  pull_request:
    branches: [ "stage", "feature/**" ]
  workflow_dispatch: { }

env:
  # Build configuration
  BUILD_JAVA_VERSION: '17'
  BUILD_JAVA_DIST: 'temurin'

jobs:
  run_instrumented_tests:
    name: Run Instrumented Tests
    runs-on: self-hosted
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git safe directory
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global core.longpaths true
        shell: bash

      - name: Initialize submodules
        run: |
          git submodule init
          git submodule update --remote
        shell: bash

      - name: Install Git LFS
        run: |
          git lfs install
          git lfs pull
        shell: bash

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.BUILD_JAVA_VERSION }}
          distribution: ${{ env.BUILD_JAVA_DIST }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK components
        run: |
          sdkmanager.bat "platform-tools" "emulator" "system-images;android-30;google_apis;x86_64" "platforms;android-30" "build-tools;30.0.3"
        shell: cmd

      - name: Set ANDROID_HOME environment variable
        run: |
          echo "ANDROID_HOME=$env:ANDROID_SDK_ROOT" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            %USERPROFILE%\.gradle\caches
            %USERPROFILE%\.gradle\wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create AVD
        run: |
          echo no | avdmanager.bat create avd -n test_avd -k "system-images;android-30;google_apis;x86_64" --force
        shell: cmd

      - name: Start Android Emulator
        run: |
          start /b emulator.bat -avd test_avd -no-window -no-audio -no-boot-anim -gpu swiftshader_indirect
          powershell -Command "& {$startTime = Get-Date; while (!(adb shell getprop sys.boot_completed 2>&1 | Select-String '1')) { if ((New-TimeSpan -Start $startTime -End (Get-Date)).TotalSeconds -gt 300) { Write-Host 'Emulator boot timed out'; exit 1 } Start-Sleep -Seconds 5; Write-Host 'Waiting for emulator to boot...' }}"
        shell: cmd

      - name: Run Instrumented Tests
        run: |
          adb devices
          gradlew.bat app:cAT "-Pandroid.testInstrumentationRunnerArguments.class=com.itsaky.androidide.OrderedTestSuite" --stacktrace
        shell: cmd
        env:
          ANDROIDIDE_TEST: true

      - name: Upload Test Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-instrumented
          path: '**/build/reports/tests/'