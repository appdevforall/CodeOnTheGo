name: Instrumented Tests
permissions:
  contents: write
  actions: write
on:
  push:
    branches: [ "stage", "feature/**" ]
  pull_request:
    branches: [ "stage", "feature/**" ]
  workflow_dispatch:

env:
  BUILD_JAVA_VERSION: '17'
  BUILD_JAVA_DIST: 'temurin'
  ANDROID_HOME: 'C:\Users\CoGoAdmin\AppData\Local\Android\Sdk'
  ANDROID_SERIAL: 'emulator-5554'

jobs:
  run_instrumented_tests:
    runs-on: self-hosted
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Setup Git LFS
        run: |
          echo Setting up Git LFS
          where git-lfs || ( 
            echo Installing Git LFS
            powershell -Command "Invoke-WebRequest -Uri https://github.com/git-lfs/git-lfs/releases/download/v3.4.1/git-lfs-windows-amd64-v3.4.1.zip -OutFile git-lfs.zip; Expand-Archive -Path git-lfs.zip -DestinationPath git-lfs; cd git-lfs; .\git-lfs-3.4.1\install.bat"
          )
          git lfs install
        shell: cmd

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Pull Git LFS Files
        run: git lfs pull
        shell: cmd

      - name: Initialize Submodules
        run: |
          git submodule init
          git submodule update --remote
        shell: cmd

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.BUILD_JAVA_VERSION }}
          distribution: ${{ env.BUILD_JAVA_DIST }}

      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            %USERPROFILE%\.gradle\caches
            %USERPROFILE%\.gradle\wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Prepare and Start Android Emulator
        run: |
          setlocal EnableDelayedExpansion

          echo ==== Clean Environment Setup ====
          "%ANDROID_HOME%\platform-tools\adb" kill-server
          taskkill /F /IM qemu-system-x86_64.exe /T > nul 2>&1 || true

          echo ==== AVD Configuration ====
          set "AVD_NAME=Pixel_4_API_30"
          
          "%ANDROID_HOME%\emulator\emulator.exe" -list-avds | findstr /i "%AVD_NAME%" > nul || (
              echo Creating AVD %AVD_NAME%...
              "%ANDROID_HOME%\cmdline-tools\latest\bin\sdkmanager" "system-images;android-30;google_apis;x86_64"
              echo no | "%ANDROID_HOME%\cmdline-tools\latest\bin\avdmanager" create avd ^
                -n %AVD_NAME% ^
                -k "system-images;android-30;google_apis;x86_64" ^
                --device "pixel_4"
          )

          echo ==== Starting Emulator ====
          start "AndroidEmulator" "%ANDROID_HOME%\emulator\emulator.exe" ^
            -avd %AVD_NAME% ^
            -no-window ^
            -no-audio ^
            -no-snapshot ^
            -writable-system ^
            -accel on ^
            -ports 5554,5555

          echo ==== Wait for Device Connection ====
          ping 127.0.0.1 -n 10 > nul
          "%ANDROID_HOME%\platform-tools\adb" connect localhost:5554
          "%ANDROID_HOME%\platform-tools\adb" wait-for-device

          echo ==== Extended Boot Validation ====
          :boot_loop
          "%ANDROID_HOME%\platform-tools\adb" shell "getprop sys.boot_completed | tr -d '\r'" | findstr /x "1" > nul || (
              ping 127.0.0.1 -n 5 > nul
              goto boot_loop
          )
          
          echo ==== Service Readiness Check ====
          :service_check
          "%ANDROID_HOME%\platform-tools\adb" shell "service check package" | findstr "Service package: found" > nul || (
              ping 127.0.0.1 -n 2 > nul
              goto service_check
          )

          echo ==== Final Device Preparation ====
          "%ANDROID_HOME%\platform-tools\adb" root
          "%ANDROID_HOME%\platform-tools\adb" shell "settings put global window_animation_scale 0.0"
          "%ANDROID_HOME%\platform-tools\adb" shell "settings put global transition_animation_scale 0.0"
          "%ANDROID_HOME%\platform-tools\adb" shell "settings put global animator_duration_scale 0.0"
          "%ANDROID_HOME%\platform-tools\adb" uninstall com.itsaky.androidide.test > nul 2>&1 || true

          echo ==== Connection Verification ====
          "%ANDROID_HOME%\platform-tools\adb" devices
          "%ANDROID_HOME%\platform-tools\adb" shell "dumpsys window | grep mCurrentFocus"
          
          endlocal
        shell: cmd

      - name: Run Instrumented Tests
        run: |
          echo ==== Environment Setup ====
          set ANDROID_SERIAL=emulator-5554
          "%ANDROID_HOME%\platform-tools\adb" devices

          echo ==== Test Execution ====
          gradlew.bat app:connectedAndroidTest ^
            "-Pandroid.testInstrumentationRunnerArguments.class=com.itsaky.androidide.OrderedTestSuite" ^
            "--info" ^
            "--stacktrace" ^
            "--no-daemon" ^
            "--console=plain" ^
            -Dorg.gradle.workers.max=2
          
          echo ==== Post-Test Cleanup ====
          "%ANDROID_HOME%\platform-tools\adb" emu kill
        shell: cmd
        env:
          ANDROIDIDE_TEST: true
          GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2

      - name: Upload Test Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-instrumented
          path: '**/build/reports/tests/'