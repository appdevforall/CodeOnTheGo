name: Instrumented Tests
permissions:
  contents: write
  actions: write
on:
  push:
    branches: [ "stage", "feature/**" ]
  pull_request:
    branches: [ "stage", "feature/**" ]
  workflow_dispatch:

env:
  BUILD_JAVA_VERSION: '17'
  BUILD_JAVA_DIST: 'temurin'
  ANDROID_HOME: 'C:\Users\CoGoAdmin\AppData\Local\Android\Sdk'

jobs:
  run_instrumented_tests:
    runs-on: self-hosted
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Setup Git LFS
        run: |
          echo Setting up Git LFS
          where git-lfs || ( 
            echo Installing Git LFS
            powershell -Command "Invoke-WebRequest -Uri https://github.com/git-lfs/git-lfs/releases/download/v3.4.1/git-lfs-windows-amd64-v3.4.1.zip -OutFile git-lfs.zip; Expand-Archive -Path git-lfs.zip -DestinationPath git-lfs; cd git-lfs; .\git-lfs-3.4.1\install.bat"
          )
          git lfs install
        shell: cmd

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Pull Git LFS Files
        run: git lfs pull
        shell: cmd

      - name: Initialize Submodules
        run: |
          git submodule init
          git submodule update --remote
        shell: cmd

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.BUILD_JAVA_VERSION }}
          distribution: ${{ env.BUILD_JAVA_DIST }}

      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            %USERPROFILE%\.gradle\caches
            %USERPROFILE%\.gradle\wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Prepare and Start Android Emulator
        run: |
          setlocal EnableDelayedExpansion

          echo Checking for existing AVDs...
          set "AVD_NAME="
          for /f "delims=" %%a in ('"%ANDROID_HOME%\emulator\emulator.exe" -list-avds') do (
            set "AVD_NAME=%%a"
            goto :have_avd
          )

          :have_avd
          if defined AVD_NAME (
            echo Found existing AVD: !AVD_NAME!. Starting...
          ) else (
            echo No existing AVD found. Creating Pixel_4_API_30...
            "%ANDROID_HOME%\cmdline-tools\latest\bin\sdkmanager" "system-images;android-30;google_apis;x86_64"
            "%ANDROID_HOME%\cmdline-tools\latest\bin\avdmanager" create avd -n Pixel_4_API_30 -k "system-images;android-30;google_apis;x86_64" --device "pixel_4" -f
            set "AVD_NAME=Pixel_4_API_30"
          )

          echo Starting emulator !AVD_NAME!...
          start "" "%ANDROID_HOME%\emulator\emulator.exe" -avd !AVD_NAME! -no-window -no-audio -no-snapshot-load

          echo Waiting for emulator to boot...
          "%ANDROID_HOME%\platform-tools\adb" wait-for-device
          "%ANDROID_HOME%\platform-tools\adb" shell "while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;"

          endlocal
          exit /b 0
        shell: cmd

      - name: Run Instrumented Tests
        run: |
          "%ANDROID_HOME%\platform-tools\adb" devices
          gradlew.bat app:connectedAndroidTest "-Pandroid.testInstrumentationRunnerArguments.class=com.itsaky.androidide.OrderedTestSuite" --stacktrace
        shell: cmd
        env:
          ANDROIDIDE_TEST: true

      - name: Upload Test Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-instrumented
          path: '**/build/reports/tests/'