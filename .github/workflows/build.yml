name: Build Universal APK
permissions:
  contents: read
  actions: write
on:
  pull_request:
    branches: [ "stage", "feature/**" ]
    paths-ignore:
      - '**.md'
      - 'fastlane/**'
      - '.github/workflows/crowdin_contributors.yml'
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Signing info (if needed)
  IDE_SIGNING_ALIAS: ${{ secrets.IDE_SIGNING_ALIAS }}
  IDE_SIGNING_AUTH_PASS: ${{ secrets.IDE_SIGNING_AUTH_PASS }}
  IDE_SIGNING_AUTH_USER: ${{ secrets.IDE_SIGNING_AUTH_USER }}
  IDE_SIGNING_KEY_PASS: ${{ secrets.IDE_SIGNING_KEY_PASS }}
  IDE_SIGNING_STORE_PASS: ${{ secrets.IDE_SIGNING_STORE_PASS }}
  IDE_SIGNING_URL: ${{ secrets.IDE_SIGNING_URL }}
  IDE_SIGNING_KEY_BIN: ${{ secrets.IDE_SIGNING_KEY_BIN }}
  # Publishing credentials (if needed)
  ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MVN_USERNAME }}
  ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MVN_PASSWORD }}
  ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.MVN_SIGNING_KEY }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.MVN_SIGNING_KEY_ID }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.MVN_SIGNING_KEY_PASSWORD }}
  # Build configuration
  BUILD_JAVA_VERSION: '17'
  BUILD_JAVA_DIST: 'temurin'

jobs:
  build_apk:
    name: Build Universal APK
    # Using macOS-13 runner instead of Ubuntu
    runs-on: macos-13
    timeout-minutes: 60
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.BUILD_JAVA_VERSION }}
          distribution: ${{ env.BUILD_JAVA_DIST }}

      #      - name: Set up Android SDK
      #        uses: android-actions/setup-android@v2
      #        with:
      #          sdk-version: "30"
      #          build-tools-version: "30.0.3"
      #          components: "platform-tools, build-tools;30.0.3, platforms;android-30"

      - name: Initialize submodules
        run: |
          git submodule init
          git submodule update --remote

      # Fix for LayoutEditor directory case sensitivity
      - name: Debug directory structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of root directory:"
          ls -la
          echo "Looking for LayoutEditor directory:"
          find . -name "LayoutEditor" -type d

      - name: Create symbolic link for LayoutEditor
        run: |
          if [ -d "LayoutEditor" ]; then
            echo "LayoutEditor directory found at root level"
            # Remove existing layouteditor if it exists but is not a symlink
            if [ -e "layouteditor" ] && [ ! -L "layouteditor" ]; then
              echo "Removing existing non-symlink layouteditor directory"
              rm -rf layouteditor
            fi
            # Create the symbolic link
            if [ ! -e "layouteditor" ]; then
              echo "Creating symbolic link: layouteditor -> LayoutEditor"
              ln -sf "$(pwd)/LayoutEditor" "$(pwd)/layouteditor"
            else
              echo "Symbolic link already exists"
            fi
          elif [ -d "./LayoutEditor" ]; then
            echo "LayoutEditor directory found at ./LayoutEditor"
            # Remove existing layouteditor if it exists but is not a symlink
            if [ -e "./layouteditor" ] && [ ! -L "./layouteditor" ]; then
              echo "Removing existing non-symlink layouteditor directory"
              rm -rf ./layouteditor
            fi
            # Create the symbolic link
            if [ ! -e "./layouteditor" ]; then
              echo "Creating symbolic link: ./layouteditor -> ./LayoutEditor"
              ln -sf "$(pwd)/LayoutEditor" "$(pwd)/layouteditor"
            else
              echo "Symbolic link already exists"
            fi
          else
            echo "LayoutEditor directory not found in expected locations"
            echo "Searching for LayoutEditor directory in the workspace:"
            find "$GITHUB_WORKSPACE" -name "LayoutEditor" -type d
            exit 1
          fi
          
          # Verify the symlink was created correctly
          ls -la | grep layouteditor

      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Assemble Universal APK
        run: |
          # Enable more verbose output for debugging
          ./gradlew clean :app:assembleDebug --info --no-daemon --stacktrace
          
          # If the build succeeds, print directory structure for verification
          if [ $? -eq 0 ]; then
            echo "Build successful. Checking directory structure:"
            ls -la
            echo "Looking for layouteditor symlink:"
            ls -la | grep layouteditor
          fi

#      - name: Copy APK Artifact
#        run: cp app/build/outputs/apk/debug/CodeOnTheGo-*.apk universal.apk
#
#      - name: Upload APK Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: universal-apk
#          path: universal.apk