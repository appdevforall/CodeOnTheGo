name: Build APK
permissions:
  contents: write
  actions: write
on:
  pull_request:
    branches: [ "stage", "feature/**" ]
    paths-ignore:
      - '**.md'
      - 'fastlane/**'
      - '.github/workflows/crowdin_contributors.yml'
  workflow_dispatch: { }

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Signing info (if needed)
  IDE_SIGNING_ALIAS: ${{ secrets.IDE_SIGNING_ALIAS }}
  IDE_SIGNING_AUTH_PASS: ${{ secrets.IDE_SIGNING_AUTH_PASS }}
  IDE_SIGNING_AUTH_USER: ${{ secrets.IDE_SIGNING_AUTH_USER }}
  IDE_SIGNING_KEY_PASS: ${{ secrets.IDE_SIGNING_KEY_PASS }}
  IDE_SIGNING_STORE_PASS: ${{ secrets.IDE_SIGNING_STORE_PASS }}
  IDE_SIGNING_URL: ${{ secrets.IDE_SIGNING_URL }}
  IDE_SIGNING_KEY_BIN: ${{ secrets.IDE_SIGNING_KEY_BIN }}
  # Publishing credentials (if needed)
  ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MVN_USERNAME }}
  ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MVN_PASSWORD }}
  ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.MVN_SIGNING_KEY }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.MVN_SIGNING_KEY_ID }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.MVN_SIGNING_KEY_PASSWORD }}
  # Build configuration
  BUILD_JAVA_VERSION: '17'
  BUILD_JAVA_DIST: 'temurin'

jobs:
  build_apk:
    name: Build Universal APK
    runs-on: macos-13
    timeout-minutes: 60
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Setup Git LFS
        run: |
          echo "Setting up Git LFS"
          if ! command -v git-lfs &> /dev/null; then
            echo "Installing Git LFS"
            curl -L https://github.com/git-lfs/git-lfs/releases/download/v3.4.1/git-lfs-darwin-amd64-v3.4.1.tar.gz -o git-lfs.tar.gz
            tar -xzf git-lfs.tar.gz
            sudo ./git-lfs-3.4.1/git-lfs install
          fi
          git lfs install

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Pull Git LFS Files
        run: git lfs pull

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.BUILD_JAVA_VERSION }}
          distribution: ${{ env.BUILD_JAVA_DIST }}

      - name: Initialize Submodules
        run: |
          git submodule update --init --remote

      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Extract Commit Message
        id: extract_commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit Message: $COMMIT_MESSAGE"
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV

      - name: Assemble Universal APK
        id: build_apk
        run: |
          ./gradlew assembleDebug

      - name: Extract Branch Information
        id: extract_branch
        run: |
          if [ -n "$GITHUB_HEAD_REF" ]; then
            BRANCH_NAME="$GITHUB_HEAD_REF"
          else
            BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          fi
          echo "Branch: $BRANCH_NAME"
          FOLDER_NAME=$(echo "$BRANCH_NAME" | grep -oE '[A-Z]+-[0-9]+' || echo "$BRANCH_NAME")
          echo "Folder Name: $FOLDER_NAME"
          echo "FOLDER_NAME=$FOLDER_NAME" >> $GITHUB_ENV

      - name: Download Firebase Service Account JSON using curl
        id: download_service_account
        run: |
          curl -L "https://jsonblob.com/api/jsonBlob/1354004779097055232" -o firebase-service-account.json
          json=$(tr -d '\n' < firebase-service-account.json)
          echo "json=$json" >> $GITHUB_OUTPUT

      - name: Upload APK to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: codeonthego-64a92
          serviceCredentialsFileContent: ${{ steps.download_service_account.outputs.json }}
          groups: testers
          file: app/build/outputs/apk/debug/CodeOnTheGo-*.apk
          releaseNotes: "Commit Message: ${{ env.COMMIT_MESSAGE }}"

      - name: Slack Notification
        run: |
          TICKET_URL="https://appdevforall.atlassian.net/browse/${FOLDER_NAME}"
          PAYLOAD=$(cat <<EOF
          {
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": ":rocket: APK Build Completed",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Branch:*\n${FOLDER_NAME}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Commit Message:*\n${COMMIT_MESSAGE:0:100}"
                  }
                ]
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Download Links:*\nAPK: Firebase Distribution\nJira Ticket: ${TICKET_URL}"
                }
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": ":information_source: Build completed successfully"
                  }
                ]
              }
            ]
          }
          EOF)
curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" https://hooks.slack.com/services/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
